package com.keysoft.pigfarm.controller;


import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import com.keysoft.pigfarm.common.EntityResponseCodeEnum;
import com.keysoft.pigfarm.integration.EntityResponse;
import com.keysoft.pigfarm.manager.FarmManager;
import com.keysoft.pigfarm.production.dto.FarmDto;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.keysoft.pigfarm.common.PageDto;
import com.keysoft.pigfarm.constant.ModelViewEnum;
import com.keysoft.pigfarm.manager.BarnManager;
import com.keysoft.pigfarm.production.dto.BarnDto;

import lombok.extern.slf4j.Slf4j;

/**
 * Generated by Speed Generator
 * 
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
 @Slf4j
@Controller
public class BarnController extends BaseController {

	@Autowired
    private BarnManager barnManager;
	@Autowired
	private FarmManager farmManager;

    @GetMapping("/barn/list")
    public ModelAndView list(@RequestParam(value = "farmCode",required = true) String farmCode,HttpServletRequest request) throws Exception {
    	log.debug("entering 'list' method...");
    	Locale locale = request.getLocale();
    	
    	BarnDto criteria = BarnDto.builder()
    								.farmCode(farmCode)
    								.page(appProperties.getDefaultPage())
    								.size(appProperties.getDefaultPageSize())
    								.build();	
		ModelAndView modelAndView = new ModelAndView(ModelViewEnum.VIEW_BARN_LIST.mav);
		PageDto page = barnManager.gets(criteria);
		if(page == null) {
			addError(request, getText("data.notfound", locale));
			return new ModelAndView("redirect:/farm/list");
		}
		modelAndView.addObject(ModelViewEnum.MODEL_PAGE.mav, barnManager.gets(criteria));
		modelAndView.addObject("farmCode", farmCode);
        return modelAndView;
    }

	@ModelAttribute
	@GetMapping("/barn/form")
	public ModelAndView show(@RequestParam (value="id", required=false) Long id, @RequestParam(value = "farmCode",required = true) String farmCode, HttpServletRequest request) throws Exception {
		log.debug("ENTERING 'SHOW FORM BARN' METHOD...");
		ModelAndView modelAndView = new ModelAndView(ModelViewEnum.VIEW_BARN_FORM.mav);
		BarnDto barnDto = new BarnDto();
		if(id != null) {
			barnDto = barnManager.get(id);
			if(barnDto == null) {
				addError(request, getText("data.notfound", request.getLocale()));
				return new ModelAndView(ModelViewEnum.REDIRECT_BARN_LIST.mav);
			}
		}
		barnDto.setFarmCode(farmCode);
		modelAndView.addObject("barnDto", barnDto);
		return modelAndView;
	}

	@PostMapping("/barn/save")
	public String save(@Valid BarnDto barnDto, HttpServletRequest request, BindingResult bindingResult) {
		log.debug("ENTERING 'SAVE BARN' METHOD...");
		Locale locale = request.getLocale();
		String view = ModelViewEnum.VIEW_BARN_FORM.mav;
		if(barnDto.getId() != null) {
			view = "/barn/form?id=" + barnDto.getId();
		}
		if (bindingResult.hasErrors()) {
			addError(request, bindingResult.getAllErrors().toString());
			return view;
		}
		view = ModelViewEnum.REDIRECT_BARN_LIST.mav + "?farmCode=" + barnDto.getFarmCode();
		try {
			EntityResponse result = barnManager.save(barnDto);
			if(result.getCode().equals(EntityResponseCodeEnum.SUCCESS_200.val)) {
				addMessage(request, getText("barn.updated.success", locale));
			} else {
				addError(request, result.getMessage());
			}
		} catch (Exception e) {
			log.error("ERROR SAVE BARN: EXCEPTION: {}", e);
			addError(request, e.getMessage());
		}
		return view;
	}
    
}